name: Build and Release Windows Executable

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set project path
      run: echo "PROJECT_PATH=$env:GITHUB_WORKSPACE\simple_live_app" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: "3.22.2"

    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop

    - name: Install dependencies
      working-directory: ${{ env.PROJECT_PATH }}
      run: flutter pub get

    - name: Install FFmpeg
      run: |
        $ffmpegUrl = "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl-shared.zip"
        Invoke-WebRequest -Uri $ffmpegUrl -OutFile ffmpeg.zip
        Expand-Archive -Path ffmpeg.zip -DestinationPath "C:\ffmpeg" -Force
        echo "C:\ffmpeg\ffmpeg-master-latest-win64-gpl-shared\bin" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: Install VLC
      run: |
        $vlcUrl = "https://download.videolan.org/pub/vlc/3.0.20/win64/vlc-3.0.20-win64.exe"
        Invoke-WebRequest -Uri $vlcUrl -OutFile vlc_installer.exe
        Start-Process -Wait -FilePath vlc_installer.exe -ArgumentList "/S", "/L=1033", "/InstallPath=C:\vlc"
        echo "C:\vlc" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: Build Windows Release
      working-directory: ${{ env.PROJECT_PATH }}
      run: flutter build windows --release

    # 关键修复：创建完整的 ZIP 包
    - name: Create Release ZIP Package
      working-directory: ${{ env.PROJECT_PATH }}
      run: |
        $releaseDir = "build\windows\x64\runner\Release"
        $zipName = "dart_simple_live_windows_$env:GITHUB_RUN_NUMBER.zip"
        
        # 创建 ZIP 文件
        Compress-Archive -Path "$releaseDir\*" -DestinationPath $zipName -Force
        echo "Created ZIP package: $zipName"
        
        # 设置 ZIP 文件路径环境变量（使用绝对路径）
        $zipPath = Join-Path -Path $pwd -ChildPath $zipName
        echo "ZIP_PATH=$zipPath" | Out-File -FilePath $env:GITHUB_ENV -Append

        # 验证 ZIP 文件存在
        if (-not (Test-Path $zipPath)) {
          Write-Error "ZIP file not created at: $zipPath"
          Get-ChildItem -Path $pwd
          exit 1
        }

    # 关键修复：正确格式化日期
    - name: Get current date
      id: current-date
      run: echo "date=$(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

    # 关键修复：使用 ZIP_PATH 环境变量
    - name: Create GitHub Release with ZIP
      uses: softprops/action-gh-release@v1
      if: ${{ success() }}
      with:
        name: "Windows Build v${{ github.run_number }}"
        tag_name: "v${{ github.run_number }}"
        body: |
          🚀 Automated Windows build of dart_simple_live
          
          ### Build Details
          - Build number: ${{ github.run_number }}
          - Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          - Date: ${{ steps.current-date.outputs.date }}
          
          ### How to Use
          1. Download the ZIP file below
          2. Extract all files
          3. Run `dart_simple_live.exe`
        files: ${{ env.ZIP_PATH }}
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
